{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ErrorModal","props","onCancel","onClear","header","show","footer","onClick","ModalOverlay","content","className","style","headerClass","onSubmit","event","preventDefault","contentClass","children","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqctl","ok","console","log","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Card","Map","mapRef","center","zoom","map","window","google","maps","Marker","position","ref","PlaceItem","auth","useContext","AuthContext","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","process","id","Authorization","token","onDelete","address","Button","location","inverse","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creator","to","danger","PlaceList","items","length","place","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","places","fetchRequest","deletedPlaceId","prevPlaces"],"mappings":"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","file":"static/js/6.0b5210a9.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = (props) => {\n    return (\n        <Modal\n            onCancel={props.onClear}\n            header='An Error Occurred!'\n            show={!!props.error}\n            footer={<Button onClick={props.onClear}>Okay</Button>}\n        >\n            <p>{props.error}</p>\n        </Modal>\n    );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './Modal.css';\nimport ReactDOM from 'react-dom';\nimport Backdrop from './Backdrop';\n\nconst ModalOverlay = (props) => {\n    const content = (\n        <div className={`modal ${props.className}`} style={props.style}>\n            <header className={`modal__header ${props.headerClass}`}>\n                <h2>{props.header}</h2>\n            </header>\n            <form onSubmit={props.onSubmit ? props.onSubmit : (event) => event.preventDefault()}>\n                <div className={`modal__content ${props.contentClass}`}>{props.children}</div>\n                <footer className={`modal__footer ${props.footerClass}`}>{props.footer}</footer>\n            </form>\n        </div>\n    );\n\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = (props) => {\n    return (\n        <React.Fragment>\n            {props.show && <Backdrop onClick={props.onCancel} />}\n            <CSSTransition\n                in={props.show}\n                mountOnEnter\n                unmountOnExit\n                timeout={200}\n                classNames='modal'\n            >\n                <ModalOverlay {...props}></ModalOverlay>\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nexport default Modal;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState();\n    const activeHttpRequests = useRef([]);\n\n    const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n        setIsLoading(true);\n        const httpAbortCtrl = new AbortController();\n        activeHttpRequests.current.push(httpAbortCtrl);\n        try {\n            const response = await fetch(url, {\n                method,\n                body,\n                headers,\n                signal: httpAbortCtrl.signal,\n            });\n            const responseData = await response.json();\n            activeHttpRequests.current = activeHttpRequests.current.filter(\n                (reqctl) => reqctl !== httpAbortCtrl\n            );\n            if (!response.ok) {\n                console.log(2);\n                throw new Error(responseData.message);\n            }\n            setIsLoading(false);\n            return responseData;\n        } catch (err) {\n            console.log(1);\n            setError(err.message);\n            setIsLoading(false);\n\n            throw err;\n        }\n    }, []);\n    const clearError = () => setError(null);\n    useEffect(() => {\n        return () => {\n            activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n        };\n    }, []);\n    return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useRef, useEffect } from 'react';\nimport './Map.css';\n\nconst Map = (props) => {\n    const mapRef = useRef();\n    const { center, zoom } = props;\n    useEffect(() => {\n        const map = new window.google.maps.Map(mapRef.current, {\n            center: center,\n            zoom: zoom,\n        });\n        new window.google.maps.Marker({ position: center, map: map });\n    }, [center, zoom]);\n\n    return <div ref={mapRef} className={`map ${props.className}`}></div>;\n};\n\nexport default Map;\n","import React, { useState, useContext } from 'react';\n\nimport './PlaceItem.css';\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\n\nconst PlaceItem = (props) => {\n    const auth = useContext(AuthContext);\n    const [showMap, setShowMap] = useState(false);\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n    const openMapHandler = () => setShowMap(true);\n    const closeMapHandler = () => setShowMap(false);\n    const showDeleteWarningHandler = () => setShowConfirmModal(true);\n    const cancelDeleteHandler = () => setShowConfirmModal(false);\n    const confirmDeleteHandler = async () => {\n        setShowConfirmModal(false);\n\n        try {\n            await sendRequest(\n                `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\n                'DELETE',\n                null,\n                {\n                    Authorization: 'Bearer ' + auth.token,\n                }\n            );\n            props.onDelete(props.id);\n        } catch (err) {}\n    };\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError}></ErrorModal>\n            <Modal\n                show={showMap}\n                onCancel={closeMapHandler}\n                header={props.address}\n                contentClass='place-item__modal-content'\n                footerClass='place-item__modal-actions'\n                footer={<Button onClick={closeMapHandler}>Close</Button>}\n            >\n                <div className='map-container'>\n                    <Map center={props.location} zoom={16}></Map>\n                </div>\n            </Modal>\n            <Modal\n                show={showConfirmModal}\n                onCancel={cancelDeleteHandler}\n                header='Are you sure?'\n                footerClass='place-item__modal-actions'\n                footer={\n                    <React.Fragment>\n                        <Button inverse onClick={cancelDeleteHandler}>\n                            Cancel\n                        </Button>\n                        <Button onClick={confirmDeleteHandler}>Delete</Button>\n                    </React.Fragment>\n                }\n            >\n                <p>\n                    Do you want to proceed to delete this place? Please note that in can't be undone\n                    later\n                </p>\n            </Modal>\n            <li className='place-item'>\n                {isLoading && <LoadingSpinner asOverlay></LoadingSpinner>}\n                <Card className='place-item__content'>\n                    <div className='place-item__image'>\n                        <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt='' />\n                    </div>\n                    <div className='place-item__info'>\n                        <h2>{props.title}</h2>\n                        <h3>{props.address}</h3>\n                        <p>{props.description}</p>\n                    </div>\n                    <div className='place-item__actions'>\n                        <Button inverse onClick={openMapHandler}>\n                            VIEW ON MAP\n                        </Button>\n                        {auth.userId === props.creator && (\n                            <React.Fragment>\n                                <Button to={`/places/${props.id}`}>EDIT</Button>\n                                <Button danger onClick={showDeleteWarningHandler}>\n                                    DELETE\n                                </Button>\n                            </React.Fragment>\n                        )}\n                    </div>\n                </Card>\n            </li>\n        </React.Fragment>\n    );\n};\n\nexport default PlaceItem;\n","import React from 'react';\nimport Card from '../../shared/components/UIElements/Card';\nimport './PlaceList.css';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\n\nconst PlaceList = (props) => {\n    if (props.items.length === 0) {\n        return (\n            <div className='place-list center'>\n                <Card>\n                    <h2>No PLaces found. Maybe create One</h2>\n                    <Button>Share Place</Button>\n                </Card>\n            </div>\n        );\n    }\n    return (\n        <ul className='place-list'>\n            {props.items.map((place) => (\n                <PlaceItem key={place.id} {...place} onDelete={props.onDeletePlace} />\n            ))}\n        </ul>\n    );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\n// const places = [\n//     {\n//         id: 'p1',\n//         title: 'goal',\n//         imageURL: '',\n//         description: 'Masterpiece',\n//         address: 'Void',\n//         creator: 'u2',\n//         location: { lat: -38.397, lng: 150.744 },\n//     },\n// ];\n\nconst UserPlaces = (props) => {\n    const [loadedPlaces, setLoadedPlaces] = useState();\n    const userId = useParams().userId;\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n    useEffect(() => {\n        const fetchRequest = async () => {\n            try {\n                const responseData = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n                );\n                setLoadedPlaces(responseData.places);\n            } catch (err) {}\n        };\n        fetchRequest();\n    }, [sendRequest, userId]);\n\n    const placeDeletedHandler = (deletedPlaceId) => {\n        setLoadedPlaces((prevPlaces) => prevPlaces.filter((place) => place.id !== deletedPlaceId));\n    };\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError}></ErrorModal>\n            {isLoading && (\n                <div className='center'>\n                    <LoadingSpinner></LoadingSpinner>\n                </div>\n            )}\n            {!isLoading && loadedPlaces && (\n                <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default UserPlaces;\n"],"sourceRoot":""}