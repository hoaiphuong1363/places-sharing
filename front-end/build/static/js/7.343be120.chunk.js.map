{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ErrorModal","props","onCancel","onClear","header","show","footer","onClick","ModalOverlay","content","className","style","headerClass","onSubmit","event","preventDefault","contentClass","children","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqctl","ok","console","log","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Card","Avatar","src","image","alt","width","height","UserItem","to","id","process","name","placeCount","UsersList","items","length","map","user","places","Users","loadedUsers","setLoadedUsers","users","fetchUser","LoadingSpinner"],"mappings":"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","file":"static/js/7.343be120.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = (props) => {\n    return (\n        <Modal\n            onCancel={props.onClear}\n            header='An Error Occurred!'\n            show={!!props.error}\n            footer={<Button onClick={props.onClear}>Okay</Button>}\n        >\n            <p>{props.error}</p>\n        </Modal>\n    );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './Modal.css';\nimport ReactDOM from 'react-dom';\nimport Backdrop from './Backdrop';\n\nconst ModalOverlay = (props) => {\n    const content = (\n        <div className={`modal ${props.className}`} style={props.style}>\n            <header className={`modal__header ${props.headerClass}`}>\n                <h2>{props.header}</h2>\n            </header>\n            <form onSubmit={props.onSubmit ? props.onSubmit : (event) => event.preventDefault()}>\n                <div className={`modal__content ${props.contentClass}`}>{props.children}</div>\n                <footer className={`modal__footer ${props.footerClass}`}>{props.footer}</footer>\n            </form>\n        </div>\n    );\n\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = (props) => {\n    return (\n        <React.Fragment>\n            {props.show && <Backdrop onClick={props.onCancel} />}\n            <CSSTransition\n                in={props.show}\n                mountOnEnter\n                unmountOnExit\n                timeout={200}\n                classNames='modal'\n            >\n                <ModalOverlay {...props}></ModalOverlay>\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nexport default Modal;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState();\n    const activeHttpRequests = useRef([]);\n\n    const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n        setIsLoading(true);\n        const httpAbortCtrl = new AbortController();\n        activeHttpRequests.current.push(httpAbortCtrl);\n        try {\n            const response = await fetch(url, {\n                method,\n                body,\n                headers,\n                signal: httpAbortCtrl.signal,\n            });\n            const responseData = await response.json();\n            activeHttpRequests.current = activeHttpRequests.current.filter(\n                (reqctl) => reqctl !== httpAbortCtrl\n            );\n            if (!response.ok) {\n                console.log(2);\n                throw new Error(responseData.message);\n            }\n            setIsLoading(false);\n            return responseData;\n        } catch (err) {\n            console.log(1);\n            setError(err.message);\n            setIsLoading(false);\n\n            throw err;\n        }\n    }, []);\n    const clearError = () => setError(null);\n    useEffect(() => {\n        return () => {\n            activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\n        };\n    }, []);\n    return { isLoading, error, sendRequest, clearError };\n};\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UserItem.css';\n\nconst UserItem = (props) => {\n    return (\n        <li className='user-item'>\n            <Card className='user-item__content'>\n                <Link to={`/${props.id}/places`}>\n                    <div className='user-item__image'>\n                        <Avatar\n                            image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n                            alt={props.name}\n                        />\n                    </div>\n                    <div className='user-item__info'>\n                        <h2>{props.name}</h2>\n                        <h3>\n                            {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\n                        </h3>\n                    </div>\n                </Link>\n            </Card>\n        </li>\n    );\n};\n\nexport default UserItem;\n","import React from 'react';\n\nimport UserItem from './UserItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport './UsersList.css';\n\nconst UsersList = (props) => {\n    if (props.items.length === 0) {\n        return (\n            <div className='center'>\n                <Card>\n                    <h2>No users found.</h2>\n                </Card>\n            </div>\n        );\n    }\n\n    return (\n        <ul className='users-list'>\n            {props.items.map((user) => (\n                <UserItem\n                    key={user.id}\n                    id={user.id}\n                    image={user.image}\n                    name={user.name}\n                    placeCount={user.places.length}\n                />\n            ))}\n        </ul>\n    );\n};\n\nexport default UsersList;\n","import React, { useEffect, useState } from 'react';\n\nimport UsersList from '../components/UsersList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Users = () => {\n    const [loadedUsers, setLoadedUsers] = useState();\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    useEffect(() => {\n        const fetchUser = async () => {\n            try {\n                const responseData = await sendRequest(\n                    `${process.env.REACT_APP_BACKEND_URL}/users`\n                );\n                setLoadedUsers(responseData.users);\n            } catch (err) {}\n        };\n\n        fetchUser();\n    }, [sendRequest]);\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError}></ErrorModal>\n            {isLoading && (\n                <div className='center'>\n                    <LoadingSpinner></LoadingSpinner>\n                </div>\n            )}\n            {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\n        </React.Fragment>\n    );\n};\n\nexport default Users;\n"],"sourceRoot":""}