{"version":3,"sources":["shared/context/auth-context.js","shared/components/FormElements/Button.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","LoadingSpinner","asOverlay","Backdrop","ReactDOM","createPortal","document","getElementById","logoutTimer","MainHeader","NavLinks","auth","useContext","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","setUserId","tokenExpirationDate","setTokenExpirationDate","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.34025acd.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n    isLoggedIn: false,\n    userId: null,\n    token: null,\n    login: () => {},\n    logout: () => {},\n});\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = (props) => {\n    if (props.href) {\n        return (\n            <a\n                className={`button button--${props.size || 'default'} ${\n                    props.inverse && 'button--inverse'\n                } ${props.danger && 'button--danger'}`}\n                href={props.href}\n            >\n                {props.children}\n            </a>\n        );\n    }\n    if (props.to) {\n        return (\n            <Link\n                to={props.to}\n                exact={props.exact}\n                className={`button button--${props.size || 'default'} ${\n                    props.inverse && 'button--inverse'\n                } ${props.danger && 'button--danger'}`}\n            >\n                {props.children}\n            </Link>\n        );\n    }\n    return (\n        <button\n            className={`button button--${props.size || 'default'} ${\n                props.inverse && 'button--inverse'\n            } ${props.danger && 'button--danger'}`}\n            type={props.type}\n            onClick={props.onClick}\n            disabled={props.disabled}\n        >\n            {props.children}\n        </button>\n    );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = (props) => {\n    return (\n        <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n            <div className='lds-dual-ring'></div>\n        </div>\n    );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React, { useCallback, useState, useEffect } from 'react';\nlet logoutTimer;\n\nexport const useAuth = () => {\n    const [token, setToken] = useState(false);\n    const [userId, setUserId] = useState();\n    const [tokenExpirationDate, setTokenExpirationDate] = useState();\n\n    const login = useCallback((uid, token, expirationDate) => {\n        setToken(token);\n        setUserId(uid);\n        const tokenExpirationDate =\n            expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n        setTokenExpirationDate(tokenExpirationDate);\n        localStorage.setItem(\n            'userData',\n            JSON.stringify({\n                userId: uid,\n                token: token,\n                expiration: tokenExpirationDate.toISOString(),\n            })\n        );\n    }, []);\n    const logout = useCallback(() => {\n        setToken(null);\n        setTokenExpirationDate(null);\n        setUserId(null);\n        localStorage.removeItem('userData');\n    }, []);\n    useEffect(() => {\n        if (token && tokenExpirationDate) {\n            const remainingTime = tokenExpirationDate.getTime() - new Date();\n            logoutTimer = setTimeout(logout, remainingTime);\n        } else {\n            clearTimeout(logoutTimer);\n        }\n    }, [token, logout, tokenExpirationDate]);\n\n    useEffect(() => {\n        const storedData = JSON.parse(localStorage.getItem('userData'));\n        if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n            login(storedData.userId, storedData.token, new Date(storedData.expiration));\n        }\n    }, [login]);\n    return { token, login, logout, userId };\n};\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { AuthContext } from '../../context/auth-context';\nimport Button from '../FormElements/Button';\n\nimport './NavLinks.css';\n\nconst NavLinks = (props) => {\n    const auth = useContext(AuthContext);\n    return (\n        <ul className='nav-links'>\n            <li>\n                <NavLink to='/' exact>\n                    ALL USERS\n                </NavLink>\n            </li>\n\n            {auth.isLoggedIn && (\n                <li>\n                    <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n                </li>\n            )}\n            {auth.isLoggedIn && (\n                <li>\n                    <NavLink to='/places/new'>ADD PLACE</NavLink>\n                </li>\n            )}\n            {!auth.isLoggedIn && (\n                <li>\n                    <NavLink to='/auth'>LOGIN</NavLink>\n                </li>\n            )}\n            {auth.isLoggedIn && (\n                <li>\n                    <Button onClick={auth.logout}>LOGOUT</Button>\n                </li>\n            )}\n        </ul>\n    );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\n// import Users from './user/pages/Users';\n// import NewPlace from './places/pages/NewPlace';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Auth from './user/pages/Auth';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nconst App = () => {\n    const { token, login, logout, userId } = useAuth();\n    let routes;\n    if (token) {\n        routes = (\n            <Switch>\n                <Route path='/' exact>\n                    <Users />\n                </Route>\n                <Route path='/places/new' exact>\n                    <NewPlace />\n                </Route>\n                <Route path='/:userId/places' exact>\n                    <UserPlaces />\n                </Route>\n\n                <Route path='/places/:placeId'>\n                    <UpdatePlace></UpdatePlace>\n                </Route>\n                <Redirect to='/' />\n            </Switch>\n        );\n    } else {\n        routes = (\n            <Switch>\n                <Route path='/places/:placeId'>\n                    <UpdatePlace></UpdatePlace>\n                </Route>\n                <Route path='/' exact>\n                    <Users />\n                </Route>\n                <Route path='/:userId/places' exact>\n                    <UserPlaces />\n                </Route>\n                <Route path='/auth'>\n                    <Auth></Auth>\n                </Route>\n                <Redirect to='/auth' />\n            </Switch>\n        );\n    }\n    return (\n        <AuthContext.Provider\n            value={{\n                isLoggedIn: !!token,\n                token: token,\n                userId: userId,\n                login: login,\n                logout: logout,\n            }}\n        >\n            <Router>\n                <MainNavigation />\n                <main>\n                    <Suspense\n                        fallback={\n                            <div className='center'>\n                                <LoadingSpinner></LoadingSpinner>\n                            </div>\n                        }\n                    >\n                        {routes}\n                    </Suspense>\n                </main>\n            </Router>\n        </AuthContext.Provider>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}